{
  // ============================= JAVASCRIPT/TYPESCRIPT
  // General
  "console.log": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "clg",
    "body": ["console.log($0)"]
  },
  "function statement": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "fun",
    "body": ["function $0() {", "", "}"]
  },
  "iife": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "iife",
    "body": ["(async () => {", "  $0", "})();"]
  },
  "named import ": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "imp",
    "body": ["import { $0 } from '$1';"]
  },
  "default import": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "impd",
    "body": ["import $0 from '$1';"]
  },
  "Object.assign": {
    "prefix": "assign",
    "body": ["Object.assign(this, params);"]
  },
  "comment block": {
    "prefix": "cmmb",
    "body": ["/*", "$0", "*/"]
  },

  // Node
  "commonjs import": {
    "scope": "javascript,typescript",
    "prefix": "req",
    "body": ["require('$0');"]
  },

  // React
  "react self-closed fragment": {
    "scope": "html,javascript,javascriptreact,typescriptreact",
    "prefix": "frag",
    "body": ["<$0 />"]
  },
  "react fragment": {
    "scope": "html,javascript,javascriptreact,typescriptreact",
    "prefix": "fragg",
    "body": ["<$0>", "</>"]
  },
  "useEffect": {
    "scope": "javascript,javascriptreact,typescriptreact",
    "prefix": "useeffect",
    "body": ["useEffect(() => console.log($0), [$0]);"]
  },

  // Styled Components
  "styled destructuring": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "deststyled",
    "body": ["  ${({ theme }) => css`", "    $0", "  `};"]
  },
  "styled tag": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "tagstyled",
    "body": [
      "export const $0 = styled.div`",
      "  ${({ theme }) => css`",
      "",
      "  `}",
      "`;"
    ]
  },
  "styled components modifier": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "modifier",
    "body": ["  $0: (theme: DefaultTheme) => css`", "  ", "  `,"]
  },

  // Jest
  "jest 'it' block": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "itskip",
    "body": ["it.skip('should $0', async () => {});"]
  },
  "jest 'describe' block": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "desc",
    "body": ["describe('given that $0', () => {", "  it.skip('should ', async () => {});", "});"]
  },

  // Disable Tools
  "eslint disable": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "eslint",
    "body": ["/* eslint-disable $0 */"]
  },
  "prettier ignore": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "prettier",
    "body": ["// prettier-ignore"]
  },
  "typescript ignore": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "tsig",
    "body": ["// @ts-ignore"]
  },
  "typescript no check": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "tsno",
    "body": ["// @ts-nocheck"]
  },

  // ============================= Markdown
  "markdown link": {
    "scope": "markdown",
    "prefix": "link",
    "body": ["[$0](##)"]
  }
}
